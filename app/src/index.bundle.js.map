{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"./main/mainRouter.build\"","webpack:///./app/src/main/electron/commonUtils.ts","webpack:///./app/src/main/electron/electronDirectoryPaths.ts","webpack:///./app/src/main/electron/functions/checkUpdate.ts","webpack:///./app/src/main/electron/functions/configInitialize.ts","webpack:///./app/src/main/electron/functions/createLogger.ts","webpack:///./app/src/main/electron/functions/parseCommandLine.ts","webpack:///./app/src/main/electron/functions/registerGlobalShortcut.ts","webpack:///./app/src/main/electron/index.ts","webpack:///./app/src/main/electron/serverProcessManager.ts","webpack:///./app/src/main/electron/windowManager.ts","webpack:///external \"cross-spawn\"","webpack:///external \"electron\"","webpack:///external \"fs\"","webpack:///external \"lodash\"","webpack:///external \"os\"","webpack:///external \"path\"","webpack:///external \"winston\"","webpack:///external \"winston-daily-rotate-file\""],"names":[],"mappings":"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","file":"index.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/src/main/electron/index.ts\");\n","module.exports = require(\"./main/mainRouter.build\");","class CommonUtils {\n    lpad(str: string, len: number) {\n        const strLen = str.length;\n        let result = str;\n        if (strLen < len) {\n            for (let i = 0; i < len - strLen; i++) {\n                result = `0${result}`;\n            }\n        }\n        return String(result);\n    };\n\n    getPaddedVersion(version: string) {\n        if (!version) {\n            return '';\n        }\n        const versionStr = String(version);\n\n        const padded: string[] = [];\n        const splitVersion = versionStr.split('.');\n        splitVersion.forEach((item) => {\n            padded.push(this.lpad(item, 4));\n        });\n\n        return padded.join('.');\n    }\n\n    getArgsParseData(argv: string) {\n        console.log('argv', argv);\n\n        const arrRoom = /roomId:(.*)/.exec(argv) || ['', ''];\n        let roomId = arrRoom[1];\n\n        if (roomId === 'undefined') {\n            roomId = '';\n        }\n\n        const regexHardwareId = /openHardwareId:([^&]*)/.exec(argv) || ['', ''];\n        let openHardwareId = regexHardwareId[1];\n\n        if (openHardwareId === 'undefined') {\n            openHardwareId = '';\n        }\n\n        return { roomId: roomId.replace(/\\//g, ''), openHardwareId };\n    }\n}\n\nexport default new CommonUtils();\n","import {app} from 'electron';\nimport path from 'path';\nimport os from 'os';\n\n/**\n * electron 디렉토리 이하는 외부 서브모듈로 사용되지 않는다. 그러므로 getAppPath 를 사용할 수 있다.\n */\n\nconst isAsarPacked = (() => app.getAppPath().indexOf('app.asar') > -1)();\n\n// project's app directory path\n// development: /Users/user/entry_projects/entry-hw/app\n// production: /Users/user/entry_projects/entry-hw/dist/mac/Entry_HW.app/Contents/Resources/app.asar\nconst rootAppPath = (() => (isAsarPacked\n    ? path.join(app.getAppPath(), 'app')\n    : path.join(app.getAppPath(), '..')\n))();\n\nconst isMacOS = os.type().includes('Darwin');\n\nexport default {\n    views: path.join(rootAppPath, 'src', 'views'),\n    config: (() => (isAsarPacked\n        ? path.join(rootAppPath, '..', '..', 'config')\n        : path.join(rootAppPath, '..', 'config')\n    ))(),\n    server: (() => {\n        const subDirPath = isMacOS ? 'mac' : 'win';\n        const fileName = isMacOS ? 'server.txt' : 'server.exe';\n        return isAsarPacked\n            ? path.join(rootAppPath, '..', '..', fileName)\n            : path.join(rootAppPath, 'server', subDirPath, fileName);\n    })(),\n    validator: (() => {\n        if (!isAsarPacked) {\n            return undefined;\n        } else if (isMacOS) {\n            return path.join(rootAppPath, '..', '..', 'validator.txt');\n        } else {\n            return path.join(rootAppPath, '..', '..', 'validator.exe');\n        }\n    })(),\n};\n\n","import { net } from 'electron';\nimport createLogger from './createLogger';\n\ntype CheckUpdateResult = {\n    version: string;\n    padded_version: string;\n    hasNewVersion: boolean;\n    currentVersion: string;\n    _id: string;\n}\n\nconst logger = createLogger('CheckUpdate');\n\nexport default (): Promise<CheckUpdateResult> => new Promise((resolve, reject) => {\n    const { updateCheckUrl, hardwareVersion } = global.sharedObject;\n    const request = net.request({\n        method: 'POST',\n        url: updateCheckUrl,\n    });\n    const params = {\n        category: 'hardware',\n        version: hardwareVersion,\n    };\n\n    request.setHeader('content-type', 'application/json; charset=utf-8');\n    request.write(JSON.stringify(params));\n\n    logger.info(`entry hw version check.. ${JSON.stringify({\n        url: updateCheckUrl,\n        method: 'POST',\n        contentType: 'application/json; charset=utf-8',\n        ...params,\n    })}`);\n    request.on('response', (response) => {\n        let buffer = '';\n        response.on('error', reject);\n        response.on('data', (chunk) => {\n            buffer += chunk.toString();\n        });\n        response.on('end', () => {\n            let data: Partial<CheckUpdateResult> = {};\n            try {\n                data = JSON.parse(buffer);\n                data.currentVersion = hardwareVersion;\n                logger.info(`result: ${JSON.stringify(data)}`);\n            } catch (e) {\n                // nothing to do\n            } finally {\n                resolve(data as CheckUpdateResult);\n            }\n        });\n    });\n    request.on('error', reject);\n    request.end();\n});\n","import packageJson from '../../../../../package.json';\nimport { forEach, merge, reduce, toPairs } from 'lodash';\nimport path from 'path';\nimport fs from 'fs';\nimport createLogger from './createLogger';\nimport directoryPaths from '../electronDirectoryPaths';\nimport { app } from 'electron';\n\nconst logger = createLogger('ConfigInitialize');\n/**\n * 외부 config 파일이 존재하지 않는 경우의 기본값.\n * 아래 로직상 여기에 없는 키는 적용되지 않는다.\n */\nconst defaultConfigSchema: IFileConfig = {\n    updateCheckUrl: 'https://playentry.org/api/checkVersion',\n    moduleResourceUrl: 'https://playentry.org/modules',\n};\n/**\n * 외부 설정이 아닌 내부에서 정의되며, 변경될 여지가 없는 하드코드의 경우 이쪽에 선언한다.\n */\nconst internalConfig: Omit<IInternalConfig, 'language'> = {\n    appName: 'hardware',\n    hardwareVersion: packageJson.version,\n    roomIds: [],\n};\n\n// target 에 있는 키만 병합한다.\nfunction mergeExistProperties(target: any, src: any) {\n    const result = target;\n    forEach(src, (value, key) => {\n        if (result[key] !== undefined) {\n            result[key] = value;\n        }\n    });\n    return result;\n}\n\nfunction getFileConfig(configName = 'entry') {\n    const getMergedConfig = (target: any) => mergeExistProperties(defaultConfigSchema, target);\n    const configFilePath = path.resolve(directoryPaths.config, `config.${configName}.json`);\n\n    logger.info(`load configuration file ${configFilePath}...`);\n\n    const fileData = fs.readFileSync(configFilePath);\n    return getMergedConfig(JSON.parse(fileData as any)) as IFileConfig;\n}\n\nexport default (cmdConfig: ICommandLineConfig) => {\n    const { config = 'entry', lang } = cmdConfig;\n    const externalConfig = getFileConfig(config);\n    let locale = (lang || externalConfig.language || app.getLocale()).substr(0, 2);\n\n    if (locale === 'ja') {\n        locale = 'jp';\n    }\n\n    const mergedConfig = merge({},\n        internalConfig, { language: locale },\n        externalConfig,\n    ) as IFileConfig & IInternalConfig;\n\n    logger.info('configuration applied');\n    logger.verbose(reduce(toPairs(mergedConfig), (result, [key, value]) =>\n        `${result}\\n${key}: ${value}`, 'configuration properties is..'));\n    global && (global.sharedObject = mergedConfig);\n\n    return mergedConfig;\n};\n","import { createLogger, format, transports } from 'winston';\nimport { app } from 'electron';\nimport DailyRotateFile from 'winston-daily-rotate-file';\nimport path from 'path';\n\nconst { combine, timestamp, printf } = format;\n\nconst _logPath = path.join(app.getPath('appData'), 'entry-hw', 'logs');\n\nconst logger = createLogger({\n    level: 'verbose',\n    format: combine(\n        timestamp({ format: 'YYYY-MM-DD HH:mm:ss' }),\n        printf(({ level, message, label, timestamp }) => `[${label}][${level}][${timestamp}]: ${message}`),\n    ),\n    transports: [\n        new transports.Console(),\n    ],\n    exitOnError: false,\n});\n\nif (process.env.NODE_ENV === 'production') {\n    logger.add(new DailyRotateFile({\n        level: 'info',\n        filename: 'entry-hw-%DATE%.log',\n        dirname: _logPath,\n        datePattern: 'YYYY-MM-DD',\n        zippedArchive: true,\n        maxSize: '10m',\n        maxFiles: '14d',\n        json: false, //Setting JSON as false\n        formatter: (options: any) =>\n            `${options.timestamp()}-${process.env.NODE_ENV}-message:${options.message ? options.message : ''}`,\n    }));\n}\n\nexport const logPath = _logPath;\nexport default (labelName: string) => logger.child({ label: labelName });\n","import createLogger from './createLogger';\nimport { reduce, toPairs } from 'lodash';\n\nconst logger = createLogger('ParseCommandLine');\n\n/**\n * 커맨드라인 값으로 허용할 형태\n * flag 의 경우는 이후 붙을 값 없이 해당 키가 존재하면 적용된다.\n * pair 의 경우는 키가 나오면, 그다음은 값이 있어야 한다.\n * 그렇지 않을 경우 다음 pair 체크로 넘어간다.\n *\n * pair 값의 첫 인덱스는 실제 값, 그다음부터는 alias 이다.\n * 실제 값의 경우는 -- 가 붙어야 하며, alias 는 - 만 붙는다.\n *\n * 모든 값은 대소문자를 구분한다.\n * 모든 값은 '=' 으로 구분한다.\n */\ntype IPropertyType = { flag: [keyof ICommandLineFlags, string][], pair: [keyof ICommandLineArgs, string][] };\nconst properties: IPropertyType = {\n    flag: [\n        ['debug', 'd'],\n    ],\n    pair: [\n        ['config', 'c'],\n        ['lang', 'l'],\n    ],\n};\n\nlet result: ICommandLineConfig = {};\n\nfunction parseFlags(key: string) {\n    for (let i = 0; i < properties.flag.length; i++) {\n        const [fullName, alias] = properties.flag[i];\n        if (`--${fullName}` === key || `-${alias}` === key) {\n            result[fullName] = true;\n            return;\n        }\n    }\n}\n\nfunction parsePair(key: string, value: string) {\n    if (!value) {\n        return;\n    }\n\n    for (let i = 0; i < properties.pair.length; i++) {\n        const [fullName, alias] = properties.pair[i];\n        if (`--${fullName}` === key || `-${alias}` === key) {\n            result[fullName] = value;\n            return;\n        }\n    }\n}\n\nexport default (argv: string[]): ICommandLineConfig => {\n    result = {};\n    for (let i = 0; i < argv.length; i++) {\n        const [key, value] = argv[i].split('=');\n        parseFlags(key);\n        parsePair(key, value);\n    }\n\n    logger.info(reduce(toPairs(result), (result, [key, value]) =>\n        `${result}\\n${key}: ${value}`, 'parsed commandLine config is..'));\n    return result;\n};\n","import { globalShortcut, webContents } from 'electron';\n\nexport default () => {\n    let inspectorShortcut;\n    if (process.platform === 'darwin') {\n        inspectorShortcut = 'Command+Alt+i';\n    } else {\n        inspectorShortcut = 'Control+Shift+i';\n    }\n\n    globalShortcut.register(inspectorShortcut, () => {\n        const content = webContents.getFocusedWebContents();\n        if (content) {\n            content.isDevToolsOpened() ? content.closeDevTools() : content.openDevTools();\n        }\n    });\n};\n","'use strict';\n\nimport { app, BrowserWindow, dialog, ipcMain, Menu } from 'electron';\nimport path from 'path';\nimport fs from 'fs';\nimport EntryServer from './serverProcessManager';\nimport WindowManager from './windowManager';\nimport CommonUtils from './commonUtils';\n// functions\nimport parseCommandLine from './functions/parseCommandLine';\nimport configInit from './functions/configInitialize';\nimport registerGlobalShortcut from './functions/registerGlobalShortcut';\nimport checkUpdate from './functions/checkUpdate';\nimport MainRouter from '../mainRouter.build';\nimport createLogger from './functions/createLogger';\n\nconst logger = createLogger('electron/index.ts');\n\nlet mainWindow: BrowserWindow | undefined = undefined;\nlet mainRouter: any = null;\nlet entryServer: any = null;\nlet autoOpenHardwareId = '';\nlet roomIds: string[] = [];\n\nif (!app.requestSingleInstanceLock()) {\n    logger.verbose('App is already running');\n    app.quit();\n    process.exit(0);\n} else {\n    logger.info('Entry HW started.');\n    app.on('window-all-closed', () => {\n        app.quit();\n    });\n\n    app.on('open-url', (event, url) => {\n        const { openHardwareId } = CommonUtils.getArgsParseData(url);\n        setTimeout(async () => {\n            while (!mainRouter) {\n                await new Promise((resolve) => setTimeout(resolve, 500));\n            }\n            mainRouter.selectHardware(openHardwareId);\n        }, 1000);\n    });\n\n    // 어플리케이션을 중복 실행했습니다. 주 어플리케이션 인스턴스를 활성화 합니다.\n    app.on('second-instance', (event, argv, workingDirectory) => {\n        let parseData: { roomId: string; openHardwareId: string } = {\n            roomId: '',\n            openHardwareId: '',\n        };\n        const entryHwCustomSchema = argv.find((arg) => arg.indexOf('entryhw:') > -1);\n        if (entryHwCustomSchema) {\n            parseData = CommonUtils.getArgsParseData(entryHwCustomSchema);\n        }\n\n        if (mainWindow) {\n            logger.verbose('[second-instance] mainWindow restored');\n            if (mainWindow.isMinimized()) {\n                mainWindow.restore();\n            }\n            mainWindow.focus();\n\n            if (mainWindow.webContents && parseData) {\n                const { roomId, openHardwareId } = parseData;\n                if (roomIds.indexOf(roomId) === -1) {\n                    logger.info(`[second-instance] roomId ${roomId} pushed`);\n                    roomIds.push(roomId);\n                }\n                mainRouter.addRoomId(roomId);\n\n                if (openHardwareId) {\n                    mainRouter.selectHardware(openHardwareId);\n                }\n            }\n        }\n    });\n\n    ipcMain.on('reload', () => {\n        logger.info('Entry HW reload.');\n        entryServer.close();\n        app.relaunch();\n        app.exit(0);\n    });\n\n    app.commandLine.appendSwitch('enable-experimental-web-platform-features', 'true');\n    app.commandLine.appendSwitch('disable-renderer-backgrounding');\n    app.commandLine.appendSwitch('enable-web-bluetooth');\n    app.setAsDefaultProtocolClient('entryhw');\n    app.once('ready', () => {\n        Menu.setApplicationMenu(null);\n        const argv = process.argv.slice(1);\n        const commandLineOptions = parseCommandLine(argv);\n        const configuration = configInit(commandLineOptions);\n        const { roomIds: configRoomIds } = configuration;\n        roomIds = configRoomIds || [];\n\n        const customSchemaArgvIndex = argv.indexOf('entryhw:');\n        if (customSchemaArgvIndex > -1) {\n            const { roomId, openHardwareId } = CommonUtils.getArgsParseData(\n                argv[customSchemaArgvIndex]\n            );\n            if (roomId) {\n                logger.info(`roomId ${roomId} detected`);\n                roomIds.push(roomId);\n            }\n\n            if (openHardwareId) {\n                autoOpenHardwareId = openHardwareId;\n            }\n        }\n\n        WindowManager.createMainWindow({ debug: commandLineOptions.debug });\n        mainWindow = WindowManager.mainWindow;\n        WindowManager.createAboutWindow(mainWindow);\n\n        registerGlobalShortcut();\n        entryServer = new EntryServer();\n\n        // @ts-ignore\n        mainRouter = new MainRouter(mainWindow, entryServer, {\n            rootAppPath:\n                process.env.NODE_ENV === 'production' && path.join(__dirname, '..', '..', '..'),\n        });\n\n        if (autoOpenHardwareId) {\n            setTimeout(() => {\n                mainRouter.selectHardware(autoOpenHardwareId);\n            }, 1000);\n        }\n    });\n\n    ipcMain.on('hardwareForceClose', () => {\n        WindowManager.mainWindowCloseConfirmed = true;\n        mainWindow?.close();\n    });\n\n    ipcMain.on('closeAboutWindow', () => {\n        WindowManager.aboutWindow && WindowManager.aboutWindow.hide();\n    });\n\n    ipcMain.on('showMessageBox', (e, msg) => {\n        dialog.showMessageBoxSync({\n            type: 'none',\n            message: msg,\n            detail: msg,\n        });\n    });\n\n    ipcMain.on('openAboutWindow', () => {\n        WindowManager.aboutWindow && WindowManager.aboutWindow.show();\n    });\n\n    ipcMain.handle('checkUpdate', async () => await checkUpdate());\n\n    ipcMain.handle('getOpenSourceText', async () => {\n        const openSourceFile = path.resolve(__dirname, '..', 'OPENSOURCE.md');\n        return await fs.promises.readFile(openSourceFile, 'utf8');\n    });\n}\n\nprocess.on('uncaughtException', (error) => {\n    const whichButtonClicked = dialog.showMessageBoxSync({\n        type: 'error',\n        title: 'Unexpected Error',\n        message: 'Unexpected Error',\n        detail: error.toString(),\n        buttons: ['ignore', 'exit'],\n    });\n    logger.error('Entry HW uncaughtException occurred', error.message, error.stack);\n    if (whichButtonClicked === 1) {\n        process.exit(-1);\n    }\n});\n","import spawn from 'cross-spawn';\nimport fs from 'fs';\nimport { ChildProcess } from 'child_process';\nimport createLogger from './functions/createLogger';\nimport directoryPaths from './electronDirectoryPaths';\nimport type MainRouter from '../mainRouter';\n\nconst logger = createLogger('electron/server');\n\nclass ServerProcessManager {\n    private readonly childProcess: ChildProcess;\n    private currentRoomId: string | undefined;\n    private router: MainRouter;\n\n    constructor(router?: any) {\n        try {\n            // this.childProcess = new Server();\n            const serverBinaryPath = directoryPaths.server;\n            logger.info(`EntryServer try to spawn.. ${serverBinaryPath}`);\n            fs.accessSync(serverBinaryPath);\n            this.childProcess = spawn(serverBinaryPath, [], {\n                stdio: ['ignore', 'inherit', 'inherit', 'ipc'],\n                detached: true,\n            });\n            logger.info('EntryServer spawned successfully');\n            this.router = router;\n        } catch (e) {\n            logger.error('Error occurred while spawn Server Process.', e);\n            throw new Error(\n                'Error occurred while spawn Server Process. make sure it exists same dir path',\n            );\n        }\n    }\n\n    setRouter(router: any) {\n        this.router = router;\n    }\n\n    open() {\n        this._receiveFromChildEventRegister();\n        this._sendToChild('open');\n        // this.childProcess.open();\n    }\n\n    close() {\n        this.childProcess && this.childProcess.kill();\n    }\n\n    addRoomIdsOnSecondInstance(roomId: string) {\n        // this.childProcess.addRoomId(roomId);\n        this.currentRoomId = roomId;\n        this._sendToChild('addRoomId', roomId);\n    }\n\n    disconnectHardware() {\n        // this.childProcess.disconnectHardware();\n        this._sendToChild('disconnectHardware');\n    }\n\n    send(data: any) {\n        // this.childProcess.sendToClient(data);\n        this._sendToChild('send', data);\n    }\n\n    /**\n     * @param methodName{string}\n     * @param message{Object?}\n     * @private\n     */\n    _sendToChild(methodName: string, message?: any) {\n        this._isProcessLive() && this.childProcess.send({\n            key: methodName,\n            value: message,\n        });\n    }\n\n    _receiveFromChildEventRegister() {\n        // this.childProcess.on('cloudModeChanged', (mode) => {\n        //     this.router.notifyCloudModeChanged(mode);\n        // });\n        // this.childProcess.on('runningModeChanged', (mode) => {\n        //     this.router.notifyServerRunningModeChanged(mode);\n        // });\n        // this.childProcess.on('message', (message) => {\n        //     this.router.handleServerData(message);\n        // });\n        // this.childProcess.on('close', () => {\n\n        // });\n        this.childProcess && this.childProcess.on('message', (message: { key: string; value: any; }) => {\n            const { key, value } = message;\n            switch (key) {\n            case 'cloudModeChanged': {\n                this.router.notifyCloudModeChanged(value);\n                break;\n            }\n            case 'runningModeChanged': {\n                this.router.notifyServerRunningModeChanged(value);\n                break;\n            }\n            case 'data': {\n                this.router.handleServerData(value);\n                break;\n            }\n            case 'connection': {\n                this.router.handleServerSocketConnected();\n                break;\n            }\n            case 'close': {\n                if (!this.currentRoomId || this.currentRoomId === value) {\n                    this.router.handleServerSocketClosed();\n                }\n                break;\n            }\n            default: {\n                console.error('unhandled pkg server message', key, value);\n            }\n            }\n        });\n    }\n\n    _isProcessLive() {\n        return this.childProcess &&\n            !this.childProcess.killed &&\n            this.childProcess.connected &&\n            this.childProcess.channel;\n    }\n}\n\nexport default ServerProcessManager;\n","import { app, BrowserWindow } from 'electron';\nimport path from 'path';\nimport createLogger from './functions/createLogger';\nimport directoryPaths from './electronDirectoryPaths';\n\nconst viewDirectoryPath = directoryPaths.views;\nconst logger = createLogger('electron/windowManager.ts');\nexport default new (class {\n    /*\n    하드웨어 메인 윈도우는 하드웨어 연결중인 경우는 꺼지지 않도록 기획되었다.\n    그러므로 close native event 가 발생했을 때, 렌더러에 다시 물어본 후\n    해당 값을 세팅 한 뒤 다시 close 를 호출 하는 식으로 종료한다.\n     */\n    public mainWindowCloseConfirmed = false;\n    public aboutWindow?: BrowserWindow = undefined;\n    public mainWindow?: BrowserWindow = undefined;\n\n    createAboutWindow(parent?: BrowserWindow) {\n        logger.verbose('about window created');\n        this.aboutWindow = new BrowserWindow({\n            parent,\n            width: 380,\n            height: 290,\n            resizable: false,\n            movable: false,\n            center: true,\n            frame: false,\n            modal: true,\n            show: false,\n            webPreferences: {\n                nodeIntegration: true,\n                contextIsolation: false,\n                preload: path.join(viewDirectoryPath, '..', 'preload', 'preload.bundle.js'),\n            },\n        });\n\n        this.aboutWindow.loadURL(`file:///${path.resolve(viewDirectoryPath, 'about.html')}`);\n\n        this.aboutWindow.on('closed', () => {\n            this.aboutWindow = undefined;\n        });\n    }\n\n    createMainWindow({ debug }: { debug?: boolean }) {\n        const { hardwareVersion, language } = global.sharedObject;\n        const title = language === 'ko' ? '엔트리 하드웨어 v' : 'Entry Hardware v';\n\n        this.mainWindow = new BrowserWindow({\n            width: 800,\n            height: 670,\n            minWidth: 420,\n            title: title + hardwareVersion,\n            webPreferences: {\n                backgroundThrottling: false,\n                nodeIntegration: false,\n                contextIsolation: false,\n                preload: path.join(viewDirectoryPath, '..', 'preload', 'preload.bundle.js'),\n            },\n        });\n\n        this.mainWindow.loadURL(`file:///${path.resolve(viewDirectoryPath, 'index.html')}`);\n\n        if (debug) {\n            this.mainWindow.webContents.openDevTools();\n        }\n\n        this.mainWindow.setMenu(null);\n\n        this.mainWindow.on('close', (e) => {\n            if (!this.mainWindowCloseConfirmed) {\n                e.preventDefault();\n                logger.verbose('EntryHW close rejected. confirm connection close');\n                this.mainWindow?.webContents.send('hardwareCloseConfirm');\n            }\n        });\n\n        this.mainWindow.on('closed', () => {\n            this.mainWindow = undefined;\n        });\n        logger.verbose(`main window created. title: ${title + hardwareVersion}`);\n    }\n})();\n","module.exports = require(\"cross-spawn\");","module.exports = require(\"electron\");","module.exports = require(\"fs\");","module.exports = require(\"lodash\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"winston\");","module.exports = require(\"winston-daily-rotate-file\");"],"sourceRoot":""}